/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: s2.swig

#define SWIGMODULE s2

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




static void *_swig_goallocate(size_t len) {
  struct {
    size_t len;
    void *ret;
  } a;
  a.len = len;
  crosscall2(_cgo_allocate, &a, (int) sizeof a);
  return a.ret;
}




/* This is here for backward compatibility, but it will not work
   with Go 1.5 or later.  Do not use it in new code.  */
static _gostring_ _swig_makegostring(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)_swig_goallocate(l + 1);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


#define SWIG_exception(code, msg) _swig_gopanic(msg)


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}


#include <string>


#include <vector>
#include <stdexcept>


#include <stdexcept>


#include <utility>


#include <list>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>

SWIGINTERN std::vector< std::string >::const_reference std_vector_Sl_std_string_Sg__get(std::vector< std::string > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_string_Sg__set(std::vector< std::string > *self,int i,std::vector< std::string >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< char >::const_reference std_vector_Sl_char_Sg__get(std::vector< char > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_char_Sg__set(std::vector< char > *self,int i,std::vector< char >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

#include <vector>
#ifdef __GNUC__
#include <ext/hash_map>
#include <ext/hash_set>
#else
#include <hash_map>
#include <hash_set>
#endif
#include <set>
#include <map>
#include <string>
#include "base/basictypes.h"


#ifdef __cplusplus
extern "C" {
#endif

void
_wrap_Swig_free_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  void *arg1 = (void *) 0 ;
  void *_swig_go_0;
  struct swigargs {
    void *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void
_wrap_new_StringVector__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *result = 0 ;
  std::vector< std::string > *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    std::vector< std::string > *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (std::vector< std::string > *)new std::vector< std::string >();
  *(std::vector< std::string > **)&_swig_go_result = (std::vector< std::string > *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_StringVector__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string >::size_type arg1 ;
  std::vector< std::string > *result = 0 ;
  long long _swig_go_0;
  std::vector< std::string > *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long long arg1;
    long : 0;
    std::vector< std::string > *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (size_t)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
  *(std::vector< std::string > **)&_swig_go_result = (std::vector< std::string > *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_StringVector_size_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  std::vector< std::string > *_swig_go_0;
  long long _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< std::string > *arg1;
    long : 0;
    long long result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((std::vector< std::string > const *)arg1)->size();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_StringVector_capacity_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  std::vector< std::string > *_swig_go_0;
  long long _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< std::string > *arg1;
    long : 0;
    long long result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((std::vector< std::string > const *)arg1)->capacity();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_StringVector_reserve_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  std::vector< std::string > *_swig_go_0;
  long long _swig_go_1;
  struct swigargs {
    std::vector< std::string > *arg1;
    long long arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


void
_wrap_StringVector_isEmpty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  bool result;
  std::vector< std::string > *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< std::string > *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((std::vector< std::string > const *)arg1)->empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_StringVector_clear_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *_swig_go_0;
  struct swigargs {
    std::vector< std::string > *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void
_wrap_StringVector_add_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  std::vector< std::string > *_swig_go_0;
  _gostring_ _swig_go_1;
  struct swigargs {
    std::vector< std::string > *arg1;
    _gostring_ arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  std::vector< std::string >::value_type arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  (arg1)->push_back((std::vector< std::string >::value_type const &)*arg2);
  
}


void
_wrap_StringVector_get_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *result = 0 ;
  std::vector< std::string > *_swig_go_0;
  intgo _swig_go_1;
  _gostring_ _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< std::string > *arg1;
    intgo arg2;
    long : 0;
    _gostring_ result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_StringVector_set_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  std::vector< std::string > *_swig_go_0;
  intgo _swig_go_1;
  _gostring_ _swig_go_2;
  struct swigargs {
    std::vector< std::string > *arg1;
    intgo arg2;
    _gostring_ arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  std::vector< std::string >::value_type arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  try {
    std_vector_Sl_std_string_Sg__set(arg1,arg2,(std::string const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  
}


void
_wrap_delete_StringVector_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *_swig_go_0;
  struct swigargs {
    std::vector< std::string > *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< std::string > **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_new_ByteVector__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *result = 0 ;
  std::vector< char > *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    std::vector< char > *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (std::vector< char > *)new std::vector< char >();
  *(std::vector< char > **)&_swig_go_result = (std::vector< char > *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_ByteVector__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char >::size_type arg1 ;
  std::vector< char > *result = 0 ;
  long long _swig_go_0;
  std::vector< char > *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long long arg1;
    long : 0;
    std::vector< char > *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (size_t)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (std::vector< char > *)new std::vector< char >(arg1);
  *(std::vector< char > **)&_swig_go_result = (std::vector< char > *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_ByteVector_size_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char >::size_type result;
  std::vector< char > *_swig_go_0;
  long long _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< char > *arg1;
    long : 0;
    long long result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((std::vector< char > const *)arg1)->size();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_ByteVector_capacity_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char >::size_type result;
  std::vector< char > *_swig_go_0;
  long long _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< char > *arg1;
    long : 0;
    long long result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((std::vector< char > const *)arg1)->capacity();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_ByteVector_reserve_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char >::size_type arg2 ;
  std::vector< char > *_swig_go_0;
  long long _swig_go_1;
  struct swigargs {
    std::vector< char > *arg1;
    long long arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


void
_wrap_ByteVector_isEmpty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  bool result;
  std::vector< char > *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< char > *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((std::vector< char > const *)arg1)->empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_ByteVector_clear_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char > *_swig_go_0;
  struct swigargs {
    std::vector< char > *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void
_wrap_ByteVector_add_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char >::value_type *arg2 = 0 ;
  std::vector< char > *_swig_go_0;
  char _swig_go_1;
  struct swigargs {
    std::vector< char > *arg1;
    char arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  arg2 = (std::vector< char >::value_type *)&_swig_go_1; 
  
  (arg1)->push_back((std::vector< char >::value_type const &)*arg2);
  
}


void
_wrap_ByteVector_get_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  int arg2 ;
  std::vector< char >::value_type *result = 0 ;
  std::vector< char > *_swig_go_0;
  intgo _swig_go_1;
  char _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    std::vector< char > *arg1;
    intgo arg2;
    long : 0;
    char result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  try {
    result = (std::vector< char >::value_type *) &std_vector_Sl_char_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  _swig_go_result = (char)*result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_ByteVector_set_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  int arg2 ;
  std::vector< char >::value_type *arg3 = 0 ;
  std::vector< char > *_swig_go_0;
  intgo _swig_go_1;
  char _swig_go_2;
  struct swigargs {
    std::vector< char > *arg1;
    intgo arg2;
    char arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (std::vector< char >::value_type *)&_swig_go_2; 
  
  try {
    std_vector_Sl_char_Sg__set(arg1,arg2,(char const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    _swig_gopanic((&_e)->what());
  }
  
  
}


void
_wrap_delete_ByteVector_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  std::vector< char > *arg1 = (std::vector< char > *) 0 ;
  std::vector< char > *_swig_go_0;
  struct swigargs {
    std::vector< char > *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(std::vector< char > **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_new_R1Interval__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  R1Interval *result = 0 ;
  double _swig_go_0;
  double _swig_go_1;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (R1Interval *)new R1Interval(arg1,arg2);
  *(R1Interval **)&_swig_go_result = (R1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_R1Interval__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *result = 0 ;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (R1Interval *)new R1Interval();
  *(R1Interval **)&_swig_go_result = (R1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval result;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = R1Interval::Empty();
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_FromPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  R1Interval result;
  double _swig_go_0;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (double)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = R1Interval::FromPoint(arg1);
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_FromPointPair_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  R1Interval result;
  double _swig_go_0;
  double _swig_go_1;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = R1Interval::FromPointPair(arg1,arg2);
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double result;
  R1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->lo();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double result;
  R1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->hi();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_bound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  int arg2 ;
  double result;
  R1Interval *_swig_go_0;
  intgo _swig_go_1;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    intgo arg2;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->bound(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_bounds_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  Vector2_d *result = 0 ;
  R1Interval *_swig_go_0;
  Vector2_d *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    Vector2_d *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (Vector2_d *) &((R1Interval const *)arg1)->bounds();
  *(Vector2_d **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_set_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->set_lo(arg2);
  
}


void
_wrap_R1Interval_set_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->set_hi(arg2);
  
}


void
_wrap_R1Interval_is_empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  bool result;
  R1Interval *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->is_empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_GetCenter_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double result;
  R1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->GetCenter();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_GetLength_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double result;
  R1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->GetLength();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  bool result;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->Contains(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_InteriorContains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  bool result;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->InteriorContains(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->Contains((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_InteriorContains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->InteriorContains((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->Intersects((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_InteriorIntersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->InteriorIntersects((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_GetDirectedHausdorffDistance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  double result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((R1Interval const *)arg1)->GetDirectedHausdorffDistance((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_AddPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->AddPoint(arg2);
  
}


void
_wrap_R1Interval_Expanded_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  double arg2 ;
  R1Interval result;
  R1Interval *_swig_go_0;
  double _swig_go_1;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    double arg2;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((R1Interval const *)arg1)->Expanded(arg2);
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Union_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  R1Interval result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((R1Interval const *)arg1)->Union((R1Interval const &)*arg2);
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_Intersection_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  R1Interval result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((R1Interval const *)arg1)->Intersection((R1Interval const &)*arg2);
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_ApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  double arg3 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->ApproxEquals((R1Interval const &)*arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_R1Interval_ApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *arg2 = 0 ;
  bool result;
  R1Interval *_swig_go_0;
  R1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    R1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(R1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((R1Interval const *)arg1)->ApproxEquals((R1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_R1Interval_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = (R1Interval *) 0 ;
  R1Interval *_swig_go_0;
  struct swigargs {
    R1Interval *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(R1Interval **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S1Angle_Radians_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  S1Angle result;
  double _swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (double)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::Radians(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_Degrees_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  S1Angle result;
  double _swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (double)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::Degrees(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_E5_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 *argp1 ;
  S1Angle result;
  int32 *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::E5(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_E6_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 *argp1 ;
  S1Angle result;
  int32 *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::E6(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_E7_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 *argp1 ;
  S1Angle result;
  int32 *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::E7(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_UnsignedE6_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  uint32 arg1 ;
  uint32 *argp1 ;
  S1Angle result;
  uint32 *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    uint32 *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (uint32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg1 = (uint32)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::UnsignedE6(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_UnsignedE7_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  uint32 arg1 ;
  uint32 *argp1 ;
  S1Angle result;
  uint32 *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    uint32 *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (uint32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg1 = (uint32)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Angle::UnsignedE7(arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S1Angle__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *result = 0 ;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S1Angle *)new S1Angle();
  *(S1Angle **)&_swig_go_result = (S1Angle *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S1Angle__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S2Point *arg2 = 0 ;
  S1Angle *result = 0 ;
  S2Point *_swig_go_0;
  S2Point *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    S2Point *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Point **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S1Angle *)new S1Angle((S2Point const &)*arg1,(S2Point const &)*arg2);
  *(S1Angle **)&_swig_go_result = (S1Angle *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S1Angle__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2LatLng *arg2 = 0 ;
  S1Angle *result = 0 ;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S1Angle *)new S1Angle((S2LatLng const &)*arg1,(S2LatLng const &)*arg2);
  *(S1Angle **)&_swig_go_result = (S1Angle *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_radians_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  double result;
  S1Angle *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Angle const *)arg1)->radians();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_degrees_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  double result;
  S1Angle *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Angle const *)arg1)->degrees();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_e5_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  int32 result;
  S1Angle *_swig_go_0;
  int32 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    int32 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Angle const *)arg1)->e5();
  *(int32 **)&_swig_go_result = new int32(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_e6_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  int32 result;
  S1Angle *_swig_go_0;
  int32 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    int32 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Angle const *)arg1)->e6();
  *(int32 **)&_swig_go_result = new int32(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_e7_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  int32 result;
  S1Angle *_swig_go_0;
  int32 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    int32 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Angle const *)arg1)->e7();
  *(int32 **)&_swig_go_result = new int32(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_abs_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  S1Angle result;
  S1Angle *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Angle const *)arg1)->abs();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_Normalized_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  S1Angle result;
  S1Angle *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Angle const *)arg1)->Normalized();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Angle_Normalize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  S1Angle *_swig_go_0;
  struct swigargs {
    S1Angle *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  (arg1)->Normalize();
  
}


void
_wrap_delete_S1Angle_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = (S1Angle *) 0 ;
  S1Angle *_swig_go_0;
  struct swigargs {
    S1Angle *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Angle **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_new_S1Interval__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  S1Interval *result = 0 ;
  double _swig_go_0;
  double _swig_go_1;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S1Interval *)new S1Interval(arg1,arg2);
  *(S1Interval **)&_swig_go_result = (S1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S1Interval__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *result = 0 ;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S1Interval *)new S1Interval();
  *(S1Interval **)&_swig_go_result = (S1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval result;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Interval::Empty();
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval result;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S1Interval::Full();
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_FromPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  S1Interval result;
  double _swig_go_0;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (double)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S1Interval::FromPoint(arg1);
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_FromPointPair_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  S1Interval result;
  double _swig_go_0;
  double _swig_go_1;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S1Interval::FromPointPair(arg1,arg2);
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double result;
  S1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->lo();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double result;
  S1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->hi();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_bound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  int arg2 ;
  double result;
  S1Interval *_swig_go_0;
  intgo _swig_go_1;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    intgo arg2;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->bound(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_bounds_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  Vector2_d *result = 0 ;
  S1Interval *_swig_go_0;
  Vector2_d *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    Vector2_d *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (Vector2_d *) &((S1Interval const *)arg1)->bounds();
  *(Vector2_d **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_set_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->set_lo(arg2);
  
}


void
_wrap_S1Interval_set_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->set_hi(arg2);
  
}


void
_wrap_S1Interval_is_valid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  bool result;
  S1Interval *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->is_valid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_is_full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  bool result;
  S1Interval *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->is_full();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_is_empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  bool result;
  S1Interval *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->is_empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_is_inverted_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  bool result;
  S1Interval *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->is_inverted();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_GetCenter_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double result;
  S1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->GetCenter();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_GetLength_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double result;
  S1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->GetLength();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Complement_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Interval const *)arg1)->Complement();
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_GetComplementCenter_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double result;
  S1Interval *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->GetComplementCenter();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  bool result;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->Contains(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_InteriorContains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  bool result;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->InteriorContains(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->Contains((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_InteriorContains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->InteriorContains((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->Intersects((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_InteriorIntersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->InteriorIntersects((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_GetDirectedHausdorffDistance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  double result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S1Interval const *)arg1)->GetDirectedHausdorffDistance((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_AddPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->AddPoint(arg2);
  
}


void
_wrap_S1Interval_Expanded_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  double arg2 ;
  S1Interval result;
  S1Interval *_swig_go_0;
  double _swig_go_1;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    double arg2;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Interval const *)arg1)->Expanded(arg2);
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Union_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  S1Interval result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Interval const *)arg1)->Union((S1Interval const &)*arg2);
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_Intersection_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  S1Interval result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S1Interval const *)arg1)->Intersection((S1Interval const &)*arg2);
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_ApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  double arg3 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->ApproxEquals((S1Interval const &)*arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S1Interval_ApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *arg2 = 0 ;
  bool result;
  S1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S1Interval const *)arg1)->ApproxEquals((S1Interval const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S1Interval_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval *arg1 = (S1Interval *) 0 ;
  S1Interval *_swig_go_0;
  struct swigargs {
    S1Interval *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S1Interval **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2CellId_kFaceBits_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::kFaceBits;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_kNumFaces_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::kNumFaces;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_kMaxLevel_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::kMaxLevel;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_kPosBits_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::kPosBits;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_kMaxSize_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::kMaxSize;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2CellId__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  uint64 arg1 ;
  uint64 *argp1 ;
  S2CellId *result = 0 ;
  uint64 *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    uint64 *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  argp1 = (uint64 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64");
  }
  arg1 = (uint64)*argp1;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2CellId *)new S2CellId(arg1);
  *(S2CellId **)&_swig_go_result = (S2CellId *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2CellId__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *result = 0 ;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2CellId *)new S2CellId();
  *(S2CellId **)&_swig_go_result = (S2CellId *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_None_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId result;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::None();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_Sentinel_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId result;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::Sentinel();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_FromFacePosLevel_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  uint64 arg2 ;
  int arg3 ;
  uint64 *argp2 ;
  S2CellId result;
  intgo _swig_go_0;
  uint64 *_swig_go_1;
  intgo _swig_go_2;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    uint64 *arg2;
    intgo arg3;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = (int)_swig_go_0; 
  
  argp2 = (uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64");
  }
  arg2 = (uint64)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::FromFacePosLevel(arg1,arg2,arg3);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_FromPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S2CellId result;
  S2Point *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Point **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::FromPoint((S2Point const &)*arg1);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_FromLatLng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2CellId result;
  S2LatLng *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::FromLatLng((S2LatLng const &)*arg1);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2Point result;
  S2CellId *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->ToPoint();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToPointRaw_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2Point result;
  S2CellId *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->ToPointRaw();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetCenterST_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  Vector2_d result;
  S2CellId *_swig_go_0;
  Vector2_d *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    Vector2_d *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->GetCenterST();
  *(Vector2_d **)&_swig_go_result = new Vector2_d(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetCenterUV_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  Vector2_d result;
  S2CellId *_swig_go_0;
  Vector2_d *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    Vector2_d *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->GetCenterUV();
  *(Vector2_d **)&_swig_go_result = new Vector2_d(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToLatLng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2LatLng result;
  S2CellId *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->ToLatLng();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_id_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  uint64 result;
  S2CellId *_swig_go_0;
  uint64 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    uint64 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->id();
  *(uint64 **)&_swig_go_result = new uint64(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_is_valid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  bool result;
  S2CellId *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellId const *)arg1)->is_valid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_face_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int result;
  S2CellId *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellId const *)arg1)->face();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_pos_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  uint64 result;
  S2CellId *_swig_go_0;
  uint64 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    uint64 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->pos();
  *(uint64 **)&_swig_go_result = new uint64(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int result;
  S2CellId *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellId const *)arg1)->level();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetSizeIJ__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int result;
  S2CellId *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellId const *)arg1)->GetSizeIJ();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetSizeST__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  double result;
  S2CellId *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2CellId const *)arg1)->GetSizeST();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetSizeIJ__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  int result;
  intgo _swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)S2CellId::GetSizeIJ(arg1);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetSizeST__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  double result;
  intgo _swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)S2CellId::GetSizeST(arg1);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_is_leaf_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  bool result;
  S2CellId *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellId const *)arg1)->is_leaf();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_is_face_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  bool result;
  S2CellId *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellId const *)arg1)->is_face();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_position_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  int result;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellId const *)arg1)->child_position(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_range_min_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->range_min();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_range_max_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->range_max();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_contains_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId *arg2 = 0 ;
  bool result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    S2CellId *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellId const *)arg1)->contains((S2CellId const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId *arg2 = 0 ;
  bool result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    S2CellId *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellId const *)arg1)->intersects((S2CellId const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_parent__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->parent();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_parent__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->parent(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->child(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_begin__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->child_begin();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_begin__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->child_begin(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_end__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->child_end();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_child_end__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->child_end(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_next_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->next();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_prev_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->prev();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_advance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int64 arg2 ;
  int64 *argp2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  int64 *_swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    int64 *arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  argp2 = (int64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64");
  }
  arg2 = (int64)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->advance(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_next_wrap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->next_wrap();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_prev_wrap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->prev_wrap();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_advance_wrap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int64 arg2 ;
  int64 *argp2 ;
  S2CellId result;
  S2CellId *_swig_go_0;
  int64 *_swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    int64 *arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  argp2 = (int64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64");
  }
  arg2 = (int64)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->advance_wrap(arg2);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_Begin_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  S2CellId result;
  intgo _swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::Begin(arg1);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_End_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  S2CellId result;
  intgo _swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::End(arg1);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToToken_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  string result;
  S2CellId *_swig_go_0;
  _gostring_ _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    _gostring_ result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->ToToken();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_FromToken_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  string *arg1 = 0 ;
  S2CellId result;
  _gostring_ _swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    _gostring_ arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  
  string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::FromToken((std::string const &)*arg1);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToString_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  string result;
  S2CellId *_swig_go_0;
  _gostring_ _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    _gostring_ result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->ToString();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_GetEdgeNeighbors_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId *arg2 ;
  S2CellId *_swig_go_0;
  S2CellId (*_swig_go_1)[4];
  struct swigargs {
    S2CellId *arg1;
    S2CellId (*arg2)[4];
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  
  ((S2CellId const *)arg1)->GetEdgeNeighbors(arg2);
  
}


void
_wrap_S2CellId_AppendVertexNeighbors_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  vector< S2CellId > *arg3 = (vector< S2CellId > *) 0 ;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  vector< S2CellId > *_swig_go_2;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    vector< S2CellId > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(vector< S2CellId > **)&_swig_go_2; 
  
  ((S2CellId const *)arg1)->AppendVertexNeighbors(arg2,arg3);
  
}


void
_wrap_S2CellId_AppendAllNeighbors_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int arg2 ;
  vector< S2CellId > *arg3 = (vector< S2CellId > *) 0 ;
  S2CellId *_swig_go_0;
  intgo _swig_go_1;
  vector< S2CellId > *_swig_go_2;
  struct swigargs {
    S2CellId *arg1;
    intgo arg2;
    vector< S2CellId > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(vector< S2CellId > **)&_swig_go_2; 
  
  ((S2CellId const *)arg1)->AppendAllNeighbors(arg2,arg3);
  
}


void
_wrap_S2CellId_FromFaceIJ_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  int arg2 ;
  int arg3 ;
  S2CellId result;
  intgo _swig_go_0;
  intgo _swig_go_1;
  intgo _swig_go_2;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    intgo arg2;
    intgo arg3;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::FromFaceIJ(arg1,arg2,arg3);
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_ToFaceIJOrientation_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int result;
  S2CellId *_swig_go_0;
  intgo *_swig_go_1;
  intgo *_swig_go_2;
  intgo *_swig_go_3;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    intgo *arg2;
    intgo *arg3;
    intgo *arg4;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2CellId **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellId const *)arg1)->ToFaceIJOrientation(arg2,arg3,arg4);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_lsb_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  uint64 result;
  S2CellId *_swig_go_0;
  uint64 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    uint64 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellId const *)arg1)->lsb();
  *(uint64 **)&_swig_go_result = new uint64(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellId_lsb_for_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  uint64 result;
  intgo _swig_go_0;
  uint64 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    uint64 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2CellId::lsb_for_level(arg1);
  *(uint64 **)&_swig_go_result = new uint64(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2CellId_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId *_swig_go_0;
  struct swigargs {
    S2CellId *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_PACKED_set_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = (S2CellId *) 0 ;
  S2CellId *_swig_go_0;
  struct swigargs {
    S2CellId *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  PACKED = *arg1;
  
}


void
_wrap_PACKED_get_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *result = 0 ;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2CellId *)&PACKED;
  *(S2CellId **)&_swig_go_result = (S2CellId *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2Region_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Region *_swig_go_0;
  struct swigargs {
    S2Region *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Region **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2Region_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Region *result = 0 ;
  S2Region *_swig_go_0;
  S2Region *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    long : 0;
    S2Region *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Region **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Region *)((S2Region const *)arg1)->Clone();
  *(S2Region **)&_swig_go_result = (S2Region *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Cap result;
  S2Region *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Region **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Region const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2LatLngRect result;
  S2Region *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Region **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Region const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_Contains_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Region *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Region const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Region *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Region const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Region *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Region const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2Region *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2Region *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2Region const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2Region_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Region *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Region_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = (S2Region *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Region *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Region *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Cap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *result = 0 ;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2Cap *)new S2Cap();
  *(S2Cap **)&_swig_go_result = (S2Cap *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_FromAxisHeight_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  double arg2 ;
  S2Cap result;
  S2Point *_swig_go_0;
  double _swig_go_1;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    double arg2;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Point **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2Cap::FromAxisHeight((S2Point const &)*arg1,arg2);
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_FromAxisAngle_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S1Angle *arg2 = 0 ;
  S2Cap result;
  S2Point *_swig_go_0;
  S1Angle *_swig_go_1;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    S1Angle *arg2;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Point **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2Cap::FromAxisAngle((S2Point const &)*arg1,(S1Angle const &)*arg2);
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_FromAxisArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  double arg2 ;
  S2Cap result;
  S2Point *_swig_go_0;
  double _swig_go_1;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    double arg2;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Point **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2Cap::FromAxisArea((S2Point const &)*arg1,arg2);
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap result;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2Cap::Empty();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap result;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2Cap::Full();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2Cap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *_swig_go_0;
  struct swigargs {
    S2Cap *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2Cap_axis_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Point *result = 0 ;
  S2Cap *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Point *) &((S2Cap const *)arg1)->axis();
  *(S2Point **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_height_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  double result;
  S2Cap *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cap const *)arg1)->height();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_area_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  double result;
  S2Cap *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cap const *)arg1)->area();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_angle_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S1Angle result;
  S2Cap *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cap const *)arg1)->angle();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_is_valid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  bool result;
  S2Cap *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->is_valid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_is_empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  bool result;
  S2Cap *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->is_empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_is_full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  bool result;
  S2Cap *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->is_full();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Complement_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cap const *)arg1)->Complement();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->Contains((S2Cap const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->Intersects((S2Cap const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_InteriorIntersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->InteriorIntersects((S2Cap const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_InteriorContains_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->InteriorContains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_AddPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Point *arg2 = 0 ;
  S2Cap *_swig_go_0;
  S2Point *_swig_go_1;
  struct swigargs {
    S2Cap *arg1;
    S2Point *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  (arg1)->AddPoint((S2Point const &)*arg2);
  
}


void
_wrap_S2Cap_AddCap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  
  (arg1)->AddCap((S2Cap const &)*arg2);
  
}


void
_wrap_S2Cap_Expanded_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S1Angle *arg2 = 0 ;
  S2Cap result;
  S2Cap *_swig_go_0;
  S1Angle *_swig_go_1;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S1Angle *arg2;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cap const *)arg1)->Expanded((S1Angle const &)*arg2);
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *result = 0 ;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Cap *)((S2Cap const *)arg1)->Clone();
  *(S2Cap **)&_swig_go_result = (S2Cap *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cap const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2LatLngRect result;
  S2Cap *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cap **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cap const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Contains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cap const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2Cap *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2Cap *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2Cap const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2Cap_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Cap *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_ApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  double arg3 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->ApproxEquals((S2Cap const &)*arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_ApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  S2Cap *arg2 = 0 ;
  bool result;
  S2Cap *_swig_go_0;
  S2Cap *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    S2Cap *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(S2Cap **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->ApproxEquals((S2Cap const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cap_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cap *arg1 = (S2Cap *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Cap *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cap *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cap **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  S2Region *swig_b0 = (S2Region *)swig_a->arg1;
  result = (bool)(swig_b0)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LatLng__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Angle *arg1 = 0 ;
  S1Angle *arg2 = 0 ;
  S2LatLng *result = 0 ;
  S1Angle *_swig_go_0;
  S1Angle *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S1Angle *arg1;
    S1Angle *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S1Angle **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLng *)new S2LatLng((S1Angle const &)*arg1,(S1Angle const &)*arg2);
  *(S2LatLng **)&_swig_go_result = (S2LatLng *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LatLng__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *result = 0 ;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLng *)new S2LatLng();
  *(S2LatLng **)&_swig_go_result = (S2LatLng *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LatLng__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S2LatLng *result = 0 ;
  S2Point *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Point **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLng *)new S2LatLng((S2Point const &)*arg1);
  *(S2LatLng **)&_swig_go_result = (S2LatLng *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_Invalid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng result;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::Invalid();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromRadians_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  S2LatLng result;
  double _swig_go_0;
  double _swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromRadians(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromDegrees_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  double arg1 ;
  double arg2 ;
  S2LatLng result;
  double _swig_go_0;
  double _swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    double arg1;
    double arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromDegrees(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromE5_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 arg2 ;
  int32 *argp1 ;
  int32 *argp2 ;
  S2LatLng result;
  int32 *_swig_go_0;
  int32 *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    int32 *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  argp2 = (int32 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg2 = (int32)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromE5(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromE6_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 arg2 ;
  int32 *argp1 ;
  int32 *argp2 ;
  S2LatLng result;
  int32 *_swig_go_0;
  int32 *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    int32 *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  argp2 = (int32 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg2 = (int32)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromE6(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromE7_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int32 arg1 ;
  int32 arg2 ;
  int32 *argp1 ;
  int32 *argp2 ;
  S2LatLng result;
  int32 *_swig_go_0;
  int32 *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    int32 *arg1;
    int32 *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  
  argp1 = (int32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg1 = (int32)*argp1;
  
  
  argp2 = (int32 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32");
  }
  arg2 = (int32)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromE7(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromUnsignedE6_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  uint32 arg1 ;
  uint32 arg2 ;
  uint32 *argp1 ;
  uint32 *argp2 ;
  S2LatLng result;
  uint32 *_swig_go_0;
  uint32 *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    uint32 *arg1;
    uint32 *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  
  argp1 = (uint32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg1 = (uint32)*argp1;
  
  
  argp2 = (uint32 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg2 = (uint32)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromUnsignedE6(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_FromUnsignedE7_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  uint32 arg1 ;
  uint32 arg2 ;
  uint32 *argp1 ;
  uint32 *argp2 ;
  S2LatLng result;
  uint32 *_swig_go_0;
  uint32 *_swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    uint32 *arg1;
    uint32 *arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  
  argp1 = (uint32 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg1 = (uint32)*argp1;
  
  
  argp2 = (uint32 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32");
  }
  arg2 = (uint32)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::FromUnsignedE7(arg1,arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_Latitude_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S1Angle result;
  S2Point *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Point **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::Latitude((S2Point const &)*arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_Longitude_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S1Angle result;
  S2Point *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Point **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLng::Longitude((S2Point const &)*arg1);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_lat_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S1Angle result;
  S2LatLng *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->lat();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_lng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S1Angle result;
  S2LatLng *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->lng();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_coords_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  Vector2_d *result = 0 ;
  S2LatLng *_swig_go_0;
  Vector2_d *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    Vector2_d *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (Vector2_d *) &((S2LatLng const *)arg1)->coords();
  *(Vector2_d **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_is_valid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  bool result;
  S2LatLng *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLng const *)arg1)->is_valid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_Normalized_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2LatLng result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->Normalized();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_ToPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2Point result;
  S2LatLng *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->ToPoint();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_GetDistance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2LatLng *arg2 = 0 ;
  S1Angle result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->GetDistance((S2LatLng const &)*arg2);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_ApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2LatLng *arg2 = 0 ;
  double arg3 ;
  bool result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLng const *)arg1)->ApproxEquals((S2LatLng const &)*arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_ApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2LatLng *arg2 = 0 ;
  bool result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLng const *)arg1)->ApproxEquals((S2LatLng const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_ToStringInDegrees__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  string result;
  S2LatLng *_swig_go_0;
  _gostring_ _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    _gostring_ result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLng const *)arg1)->ToStringInDegrees();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLng_ToStringInDegrees__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  string *arg2 = (string *) 0 ;
  S2LatLng *_swig_go_0;
  _gostring_* _swig_go_1;
  struct swigargs {
    S2LatLng *arg1;
    _gostring_* arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(string **)&_swig_go_1; 
  
  ((S2LatLng const *)arg1)->ToStringInDegrees(arg2);
  
}


void
_wrap_delete_S2LatLng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = (S2LatLng *) 0 ;
  S2LatLng *_swig_go_0;
  struct swigargs {
    S2LatLng *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_new_S2LatLngRect__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2LatLng *arg2 = 0 ;
  S2LatLngRect *result = 0 ;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLngRect *)new S2LatLngRect((S2LatLng const &)*arg1,(S2LatLng const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = (S2LatLngRect *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LatLngRect__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval *arg1 = 0 ;
  S1Interval *arg2 = 0 ;
  S2LatLngRect *result = 0 ;
  R1Interval *_swig_go_0;
  S1Interval *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    R1Interval *arg1;
    S1Interval *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(R1Interval **)&_swig_go_0; 
  arg2 = *(S1Interval **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLngRect *)new S2LatLngRect((R1Interval const &)*arg1,(S1Interval const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = (S2LatLngRect *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LatLngRect__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *result = 0 ;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLngRect *)new S2LatLngRect();
  *(S2LatLngRect **)&_swig_go_result = (S2LatLngRect *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_FromCenterSize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2LatLng *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::FromCenterSize((S2LatLng const &)*arg1,(S2LatLng const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_FromPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2LatLngRect result;
  S2LatLng *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::FromPoint((S2LatLng const &)*arg1);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_FromPointPair_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2LatLng *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLng *_swig_go_0;
  S2LatLng *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    S2LatLng *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::FromPointPair((S2LatLng const &)*arg1,(S2LatLng const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lat_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->lat_lo();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lat_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->lat_hi();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lng_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->lng_lo();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lng_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->lng_hi();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lat_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  R1Interval *result = 0 ;
  S2LatLngRect *_swig_go_0;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (R1Interval *) &((S2LatLngRect const *)arg1)->lat();
  *(R1Interval **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Interval *result = 0 ;
  S2LatLngRect *_swig_go_0;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S1Interval *) &((S2LatLngRect const *)arg1)->lng();
  *(S1Interval **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_mutable_lat_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  R1Interval *result = 0 ;
  S2LatLngRect *_swig_go_0;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (R1Interval *)(arg1)->mutable_lat();
  *(R1Interval **)&_swig_go_result = (R1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_mutable_lng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Interval *result = 0 ;
  S2LatLngRect *_swig_go_0;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S1Interval *)(arg1)->mutable_lng();
  *(S1Interval **)&_swig_go_result = (S1Interval *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_lo_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->lo();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_hi_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->hi();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect result;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::Empty();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect result;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::Full();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_FullLat_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  R1Interval result;
  R1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    R1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::FullLat();
  *(R1Interval **)&_swig_go_result = new R1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_FullLng_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S1Interval result;
  S1Interval *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S1Interval *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2LatLngRect::FullLng();
  *(S1Interval **)&_swig_go_result = new S1Interval(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_is_valid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->is_valid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_is_empty_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->is_empty();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_is_full_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->is_full();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_is_point_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->is_point();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_is_inverted_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->is_inverted();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetVertex_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  int arg2 ;
  S2LatLng result;
  S2LatLngRect *_swig_go_0;
  intgo _swig_go_1;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    intgo arg2;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetVertex(arg2);
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetCenter_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetCenter();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetSize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLng *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetSize();
  *(S2LatLng **)&_swig_go_result = new S2LatLng(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Area_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  double result;
  S2LatLngRect *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2LatLngRect const *)arg1)->Area();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLng *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Contains((S2LatLng const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_InteriorContains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->InteriorContains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_InteriorContains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLng *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->InteriorContains((S2LatLng const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Contains((S2LatLngRect const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_InteriorContains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->InteriorContains((S2LatLngRect const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Intersects__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Intersects((S2LatLngRect const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Intersects__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Intersects((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_InteriorIntersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->InteriorIntersects((S2LatLngRect const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_AddPoint__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Point *arg2 = 0 ;
  S2LatLngRect *_swig_go_0;
  S2Point *_swig_go_1;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Point *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  (arg1)->AddPoint((S2Point const &)*arg2);
  
}


void
_wrap_S2LatLngRect_AddPoint__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng *arg2 = 0 ;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_1;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLng *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  (arg1)->AddPoint((S2LatLng const &)*arg2);
  
}


void
_wrap_S2LatLngRect_Expanded_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLng *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->Expanded((S2LatLng const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Union_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->Union((S2LatLngRect const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Intersection_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->Intersection((S2LatLngRect const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_ConvolveWithCap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S1Angle *arg2 = 0 ;
  S2LatLngRect result;
  S2LatLngRect *_swig_go_0;
  S1Angle *_swig_go_1;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S1Angle *arg2;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->ConvolveWithCap((S1Angle const &)*arg2);
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetDistance__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetDistance((S2LatLngRect const &)*arg2);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetDistance__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLng *arg2 = 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S2LatLng *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLng *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLng **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetDistance((S2LatLng const &)*arg2);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetDirectedHausdorffDistance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetDirectedHausdorffDistance((S2LatLngRect const &)*arg2);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetHausdorffDistance_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  S1Angle result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetHausdorffDistance((S2LatLngRect const &)*arg2);
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_ApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  double arg3 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->ApproxEquals((S2LatLngRect const &)*arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_ApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2LatLngRect *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2LatLngRect **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->ApproxEquals((S2LatLngRect const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *result = 0 ;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LatLngRect *)((S2LatLngRect const *)arg1)->Clone();
  *(S2LatLngRect **)&_swig_go_result = (S2LatLngRect *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Cap result;
  S2LatLngRect *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect result;
  S2LatLngRect *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2LatLngRect const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Contains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Contains__SWIG_3_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2LatLngRect const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LatLngRect_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2LatLngRect *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2LatLngRect *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2LatLngRect const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2LatLngRect_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2LatLngRect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  S2LatLngRect *_swig_go_0;
  struct swigargs {
    S2LatLngRect *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2LatLngRect_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLngRect *arg1 = (S2LatLngRect *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2LatLngRect *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLngRect *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LatLngRect **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  S2Region *swig_b0 = (S2Region *)swig_a->arg1;
  result = (bool)(swig_b0)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2RegionCoverer_kDefaultMaxCells_S2RegionCoverer_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2RegionCoverer::kDefaultMaxCells;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2RegionCoverer_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *result = 0 ;
  S2RegionCoverer *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2RegionCoverer *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2RegionCoverer *)new S2RegionCoverer();
  *(S2RegionCoverer **)&_swig_go_result = (S2RegionCoverer *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2RegionCoverer_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  S2RegionCoverer *_swig_go_0;
  struct swigargs {
    S2RegionCoverer *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2RegionCoverer_set_min_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int arg2 ;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2RegionCoverer *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_min_level(arg2);
  
}


void
_wrap_S2RegionCoverer_set_max_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int arg2 ;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2RegionCoverer *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_max_level(arg2);
  
}


void
_wrap_S2RegionCoverer_min_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int result;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2RegionCoverer *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2RegionCoverer const *)arg1)->min_level();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2RegionCoverer_max_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int result;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2RegionCoverer *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2RegionCoverer const *)arg1)->max_level();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2RegionCoverer_set_level_mod_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int arg2 ;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2RegionCoverer *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_level_mod(arg2);
  
}


void
_wrap_S2RegionCoverer_level_mod_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int result;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2RegionCoverer *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2RegionCoverer const *)arg1)->level_mod();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2RegionCoverer_set_max_cells_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int arg2 ;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2RegionCoverer *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_max_cells(arg2);
  
}


void
_wrap_S2RegionCoverer_max_cells_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  int result;
  S2RegionCoverer *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2RegionCoverer *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2RegionCoverer const *)arg1)->max_cells();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2RegionCoverer_GetCovering_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  S2Region *arg2 = 0 ;
  vector< S2CellId > *arg3 = (vector< S2CellId > *) 0 ;
  S2RegionCoverer *_swig_go_0;
  S2Region *_swig_go_1;
  vector< S2CellId > *_swig_go_2;
  struct swigargs {
    S2RegionCoverer *arg1;
    S2Region *arg2;
    vector< S2CellId > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = *(S2Region **)&_swig_go_1; 
  arg3 = *(vector< S2CellId > **)&_swig_go_2; 
  
  (arg1)->GetCovering((S2Region const &)*arg2,arg3);
  
}


void
_wrap_S2RegionCoverer_GetInteriorCovering_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  S2Region *arg2 = 0 ;
  vector< S2CellId > *arg3 = (vector< S2CellId > *) 0 ;
  S2RegionCoverer *_swig_go_0;
  S2Region *_swig_go_1;
  vector< S2CellId > *_swig_go_2;
  struct swigargs {
    S2RegionCoverer *arg1;
    S2Region *arg2;
    vector< S2CellId > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = *(S2Region **)&_swig_go_1; 
  arg3 = *(vector< S2CellId > **)&_swig_go_2; 
  
  (arg1)->GetInteriorCovering((S2Region const &)*arg2,arg3);
  
}


void
_wrap_S2RegionCoverer_GetCellUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  S2Region *arg2 = 0 ;
  S2CellUnion *arg3 = (S2CellUnion *) 0 ;
  S2RegionCoverer *_swig_go_0;
  S2Region *_swig_go_1;
  S2CellUnion *_swig_go_2;
  struct swigargs {
    S2RegionCoverer *arg1;
    S2Region *arg2;
    S2CellUnion *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = *(S2Region **)&_swig_go_1; 
  arg3 = *(S2CellUnion **)&_swig_go_2; 
  
  (arg1)->GetCellUnion((S2Region const &)*arg2,arg3);
  
}


void
_wrap_S2RegionCoverer_GetInteriorCellUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2RegionCoverer *arg1 = (S2RegionCoverer *) 0 ;
  S2Region *arg2 = 0 ;
  S2CellUnion *arg3 = (S2CellUnion *) 0 ;
  S2RegionCoverer *_swig_go_0;
  S2Region *_swig_go_1;
  S2CellUnion *_swig_go_2;
  struct swigargs {
    S2RegionCoverer *arg1;
    S2Region *arg2;
    S2CellUnion *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2RegionCoverer **)&_swig_go_0; 
  arg2 = *(S2Region **)&_swig_go_1; 
  arg3 = *(S2CellUnion **)&_swig_go_2; 
  
  (arg1)->GetInteriorCellUnion((S2Region const &)*arg2,arg3);
  
}


void
_wrap_S2RegionCoverer_GetSimpleCovering_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Region *arg1 = 0 ;
  S2Point *arg2 = 0 ;
  int arg3 ;
  vector< S2CellId > *arg4 = (vector< S2CellId > *) 0 ;
  S2Region *_swig_go_0;
  S2Point *_swig_go_1;
  intgo _swig_go_2;
  vector< S2CellId > *_swig_go_3;
  struct swigargs {
    S2Region *arg1;
    S2Point *arg2;
    intgo arg3;
    vector< S2CellId > *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Region **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(vector< S2CellId > **)&_swig_go_3; 
  
  S2RegionCoverer::GetSimpleCovering((S2Region const &)*arg1,(S2Point const &)*arg2,arg3,arg4);
  
}


void
_wrap_new_S2Cell__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *result = 0 ;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2Cell *)new S2Cell();
  *(S2Cell **)&_swig_go_result = (S2Cell *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Cell__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellId *arg1 = 0 ;
  S2Cell *result = 0 ;
  S2CellId *_swig_go_0;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellId *arg1;
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellId **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Cell *)new S2Cell((S2CellId const &)*arg1);
  *(S2Cell **)&_swig_go_result = (S2Cell *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_FromFacePosLevel_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  uint64 arg2 ;
  int arg3 ;
  uint64 *argp2 ;
  S2Cell result;
  intgo _swig_go_0;
  uint64 *_swig_go_1;
  intgo _swig_go_2;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    uint64 *arg2;
    intgo arg3;
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = (int)_swig_go_0; 
  
  argp2 = (uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64");
  }
  arg2 = (uint64)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = S2Cell::FromFacePosLevel(arg1,arg2,arg3);
  *(S2Cell **)&_swig_go_result = new S2Cell(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Cell__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Point *arg1 = 0 ;
  S2Cell *result = 0 ;
  S2Point *_swig_go_0;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Point *arg1;
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Point **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Cell *)new S2Cell((S2Point const &)*arg1);
  *(S2Cell **)&_swig_go_result = (S2Cell *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Cell__SWIG_3_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LatLng *arg1 = 0 ;
  S2Cell *result = 0 ;
  S2LatLng *_swig_go_0;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LatLng *arg1;
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LatLng **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Cell *)new S2Cell((S2LatLng const &)*arg1);
  *(S2Cell **)&_swig_go_result = (S2Cell *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_id_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2CellId result;
  S2Cell *_swig_go_0;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->id();
  *(S2CellId **)&_swig_go_result = new S2CellId(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_face_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int result;
  S2Cell *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Cell const *)arg1)->face();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_level_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int result;
  S2Cell *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Cell const *)arg1)->level();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_orientation_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int result;
  S2Cell *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Cell const *)arg1)->orientation();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_is_leaf_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  bool result;
  S2Cell *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->is_leaf();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetSizeIJ_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int result;
  S2Cell *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Cell const *)arg1)->GetSizeIJ();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetSizeST_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  double result;
  S2Cell *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cell const *)arg1)->GetSizeST();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetVertex_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int arg2 ;
  S2Point result;
  S2Cell *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetVertex(arg2);
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetVertexRaw_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int arg2 ;
  S2Point result;
  S2Cell *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetVertexRaw(arg2);
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetEdge_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int arg2 ;
  S2Point result;
  S2Cell *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetEdge(arg2);
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetEdgeRaw_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  int arg2 ;
  S2Point result;
  S2Cell *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetEdgeRaw(arg2);
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_Subdivide_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cell *arg2 ;
  bool result;
  S2Cell *_swig_go_0;
  S2Cell (*_swig_go_1)[4];
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    S2Cell (*arg2)[4];
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->Subdivide(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetCenter_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Point result;
  S2Cell *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetCenter();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetCenterRaw_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Point result;
  S2Cell *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetCenterRaw();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_AverageArea__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int arg1 ;
  double result;
  intgo _swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    intgo arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = (int)_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)S2Cell::AverageArea(arg1);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_AverageArea__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  double result;
  S2Cell *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cell const *)arg1)->AverageArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_ApproxArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  double result;
  S2Cell *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cell const *)arg1)->ApproxArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_ExactArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  double result;
  S2Cell *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Cell const *)arg1)->ExactArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cell *result = 0 ;
  S2Cell *_swig_go_0;
  S2Cell *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Cell *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Cell *)((S2Cell const *)arg1)->Clone();
  *(S2Cell **)&_swig_go_result = (S2Cell *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cap result;
  S2Cell *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2LatLngRect result;
  S2Cell *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Cell const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Cell *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Cell *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Cell *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Cell *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Cell const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Cell_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2Cell *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2Cell *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2Cell const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2Cell_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Cell *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2Cell_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  S2Cell *_swig_go_0;
  struct swigargs {
    S2Cell *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2Cell_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = (S2Cell *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Cell *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Cell **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  S2Region *swig_b0 = (S2Region *)swig_a->arg1;
  result = (bool)(swig_b0)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2CellUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *result = 0 ;
  S2CellUnion *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2CellUnion *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2CellUnion *)new S2CellUnion();
  *(S2CellUnion **)&_swig_go_result = (S2CellUnion *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Init__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *arg2 = 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< S2CellId > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< S2CellId > **)&_swig_go_1; 
  
  (arg1)->Init((vector< S2CellId > const &)*arg2);
  
}


void
_wrap_S2CellUnion_Init__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< uint64 > *arg2 = 0 ;
  S2CellUnion *_swig_go_0;
  vector< uint64 > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< uint64 > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< uint64 > **)&_swig_go_1; 
  
  (arg1)->Init((vector< uint64 > const &)*arg2);
  
}


void
_wrap_S2CellUnion_InitSwap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *arg2 = (vector< S2CellId > *) 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< S2CellId > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< S2CellId > **)&_swig_go_1; 
  
  (arg1)->InitSwap(arg2);
  
}


void
_wrap_S2CellUnion_InitRaw__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *arg2 = 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< S2CellId > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< S2CellId > **)&_swig_go_1; 
  
  (arg1)->InitRaw((vector< S2CellId > const &)*arg2);
  
}


void
_wrap_S2CellUnion_InitRaw__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< uint64 > *arg2 = 0 ;
  S2CellUnion *_swig_go_0;
  vector< uint64 > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< uint64 > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< uint64 > **)&_swig_go_1; 
  
  (arg1)->InitRaw((vector< uint64 > const &)*arg2);
  
}


void
_wrap_S2CellUnion_InitRawSwap_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *arg2 = (vector< S2CellId > *) 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< S2CellId > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< S2CellId > **)&_swig_go_1; 
  
  (arg1)->InitRawSwap(arg2);
  
}


void
_wrap_S2CellUnion_Detach_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *arg2 = (vector< S2CellId > *) 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    vector< S2CellId > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(vector< S2CellId > **)&_swig_go_1; 
  
  (arg1)->Detach(arg2);
  
}


void
_wrap_S2CellUnion_num_cells_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  int result;
  S2CellUnion *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2CellUnion const *)arg1)->num_cells();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_cell_id_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  int arg2 ;
  S2CellId *result = 0 ;
  S2CellUnion *_swig_go_0;
  intgo _swig_go_1;
  S2CellId *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    intgo arg2;
    long : 0;
    S2CellId *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2CellId *) &((S2CellUnion const *)arg1)->cell_id(arg2);
  *(S2CellId **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_cell_ids_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  vector< S2CellId > *result = 0 ;
  S2CellUnion *_swig_go_0;
  vector< S2CellId > *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    vector< S2CellId > *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (vector< S2CellId > *) &((S2CellUnion const *)arg1)->cell_ids();
  *(vector< S2CellId > **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Normalize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Normalize();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Denormalize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  int arg2 ;
  int arg3 ;
  vector< S2CellId > *arg4 = (vector< S2CellId > *) 0 ;
  S2CellUnion *_swig_go_0;
  intgo _swig_go_1;
  intgo _swig_go_2;
  vector< S2CellId > *_swig_go_3;
  struct swigargs {
    S2CellUnion *arg1;
    intgo arg2;
    intgo arg3;
    vector< S2CellId > *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(vector< S2CellId > **)&_swig_go_3; 
  
  ((S2CellUnion const *)arg1)->Denormalize(arg2,arg3,arg4);
  
}


void
_wrap_S2CellUnion_Pack__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  int arg2 ;
  S2CellUnion *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->Pack(arg2);
  
}


void
_wrap_S2CellUnion_Pack__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *_swig_go_0;
  struct swigargs {
    S2CellUnion *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  (arg1)->Pack();
  
}


void
_wrap_S2CellUnion_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellId *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2CellId *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellId *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Contains((S2CellId const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Intersects__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellId *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2CellId *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellId *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Intersects((S2CellId const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Contains((S2CellUnion const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Intersects__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Intersects((S2CellUnion const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_GetUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  S2CellUnion *arg3 = (S2CellUnion *) 0 ;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  S2CellUnion *_swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    S2CellUnion *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  arg3 = *(S2CellUnion **)&_swig_go_2; 
  
  (arg1)->GetUnion((S2CellUnion const *)arg2,(S2CellUnion const *)arg3);
  
}


void
_wrap_S2CellUnion_GetIntersection__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  S2CellUnion *arg3 = (S2CellUnion *) 0 ;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  S2CellUnion *_swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    S2CellUnion *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  arg3 = *(S2CellUnion **)&_swig_go_2; 
  
  (arg1)->GetIntersection((S2CellUnion const *)arg2,(S2CellUnion const *)arg3);
  
}


void
_wrap_S2CellUnion_GetDifference_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  S2CellUnion *arg3 = (S2CellUnion *) 0 ;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  S2CellUnion *_swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    S2CellUnion *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  arg3 = *(S2CellUnion **)&_swig_go_2; 
  
  (arg1)->GetDifference((S2CellUnion const *)arg2,(S2CellUnion const *)arg3);
  
}


void
_wrap_S2CellUnion_GetIntersection__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *arg2 = (S2CellUnion *) 0 ;
  S2CellId *arg3 = 0 ;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_1;
  S2CellId *_swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellUnion *arg2;
    S2CellId *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  arg3 = *(S2CellId **)&_swig_go_2; 
  
  (arg1)->GetIntersection((S2CellUnion const *)arg2,(S2CellId const &)*arg3);
  
}


void
_wrap_S2CellUnion_Expand__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  int arg2 ;
  S2CellUnion *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->Expand(arg2);
  
}


void
_wrap_S2CellUnion_Expand__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S1Angle *arg2 = 0 ;
  int arg3 ;
  S2CellUnion *_swig_go_0;
  S1Angle *_swig_go_1;
  intgo _swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S1Angle *arg2;
    intgo arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->Expand((S1Angle const &)*arg2,arg3);
  
}


void
_wrap_S2CellUnion_InitFromRange_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellId *arg2 = 0 ;
  S2CellId *arg3 = 0 ;
  S2CellUnion *_swig_go_0;
  S2CellId *_swig_go_1;
  S2CellId *_swig_go_2;
  struct swigargs {
    S2CellUnion *arg1;
    S2CellId *arg2;
    S2CellId *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2CellId **)&_swig_go_1; 
  arg3 = *(S2CellId **)&_swig_go_2; 
  
  (arg1)->InitFromRange((S2CellId const &)*arg2,(S2CellId const &)*arg3);
  
}


void
_wrap_S2CellUnion_LeafCellsCovered_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  uint64 result;
  S2CellUnion *_swig_go_0;
  uint64 *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    uint64 *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellUnion const *)arg1)->LeafCellsCovered();
  *(uint64 **)&_swig_go_result = new uint64(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_AverageBasedArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  double result;
  S2CellUnion *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2CellUnion const *)arg1)->AverageBasedArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_ApproxArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  double result;
  S2CellUnion *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2CellUnion const *)arg1)->ApproxArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_ExactArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  double result;
  S2CellUnion *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2CellUnion const *)arg1)->ExactArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *result = 0 ;
  S2CellUnion *_swig_go_0;
  S2CellUnion *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    S2CellUnion *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2CellUnion *)((S2CellUnion const *)arg1)->Clone();
  *(S2CellUnion **)&_swig_go_result = (S2CellUnion *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2Cap result;
  S2CellUnion *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellUnion const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2LatLngRect result;
  S2CellUnion *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2CellUnion const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Contains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2CellUnion *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2CellUnion *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2CellUnion const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2CellUnion_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2CellUnion_Contains__SWIG_3_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2CellUnion const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2CellUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  S2CellUnion *_swig_go_0;
  struct swigargs {
    S2CellUnion *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2CellUnion_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2CellUnion *arg1 = (S2CellUnion *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2CellUnion *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2CellUnion *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2CellUnion **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  S2Region *swig_b0 = (S2Region *)swig_a->arg1;
  result = (bool)(swig_b0)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Polygon__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *result = 0 ;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)new S2Polygon();
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Polygon__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Loop * > *arg1 = (vector< S2Loop * > *) 0 ;
  S2Polygon *result = 0 ;
  vector< S2Loop * > *_swig_go_0;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Loop * > *arg1;
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(vector< S2Loop * > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)new S2Polygon(arg1);
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Polygon__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = 0 ;
  S2Polygon *result = 0 ;
  S2Cell *_swig_go_0;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)new S2Polygon((S2Cell const &)*arg1);
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Init_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  vector< S2Loop * > *arg2 = (vector< S2Loop * > *) 0 ;
  S2Polygon *_swig_go_0;
  vector< S2Loop * > *_swig_go_1;
  struct swigargs {
    S2Polygon *arg1;
    vector< S2Loop * > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(vector< S2Loop * > **)&_swig_go_1; 
  
  (arg1)->Init(arg2);
  
}


void
_wrap_S2Polygon_Release_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  vector< S2Loop * > *arg2 = (vector< S2Loop * > *) 0 ;
  S2Polygon *_swig_go_0;
  vector< S2Loop * > *_swig_go_1;
  struct swigargs {
    S2Polygon *arg1;
    vector< S2Loop * > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(vector< S2Loop * > **)&_swig_go_1; 
  
  (arg1)->Release(arg2);
  
}


void
_wrap_S2Polygon_Copy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  (arg1)->Copy((S2Polygon const *)arg2);
  
}


void
_wrap_delete_S2Polygon_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *_swig_go_0;
  struct swigargs {
    S2Polygon *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2Polygon_IsValid__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Loop * > *arg1 = 0 ;
  bool result;
  vector< S2Loop * > *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Loop * > *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(vector< S2Loop * > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)S2Polygon::IsValid((vector< S2Loop * > const &)*arg1);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_IsValid__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->IsValid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_IsValid__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  bool arg2 ;
  int arg3 ;
  bool result;
  S2Polygon *_swig_go_0;
  bool _swig_go_1;
  intgo _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    bool arg2;
    intgo arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->IsValid(arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_num_loops_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  int result;
  S2Polygon *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Polygon const *)arg1)->num_loops();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_num_vertices_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  int result;
  S2Polygon *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Polygon const *)arg1)->num_vertices();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_loop_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  int arg2 ;
  S2Loop *result = 0 ;
  S2Polygon *_swig_go_0;
  intgo _swig_go_1;
  S2Loop *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    intgo arg2;
    long : 0;
    S2Loop *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Loop *)((S2Polygon const *)arg1)->loop(arg2);
  *(S2Loop **)&_swig_go_result = (S2Loop *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetParent_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  int arg2 ;
  int result;
  S2Polygon *_swig_go_0;
  intgo _swig_go_1;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    intgo arg2;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Polygon const *)arg1)->GetParent(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetLastDescendant_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  int arg2 ;
  int result;
  S2Polygon *_swig_go_0;
  intgo _swig_go_1;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    intgo arg2;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Polygon const *)arg1)->GetLastDescendant(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  double result;
  S2Polygon *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Polygon const *)arg1)->GetArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetCentroid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Point result;
  S2Polygon *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Polygon const *)arg1)->GetCentroid();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->Contains((S2Polygon const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_ApproxContains_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S1Angle arg3 ;
  S1Angle *argp3 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S1Angle *_swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S1Angle *arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  argp3 = (S1Angle *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg3 = (S1Angle)*argp3;
  
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->ApproxContains((S2Polygon const *)arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->Intersects((S2Polygon const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_InitToIntersection_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  (arg1)->InitToIntersection((S2Polygon const *)arg2,(S2Polygon const *)arg3);
  
}


void
_wrap_S2Polygon_InitToIntersectionSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S1Angle arg4 ;
  S1Angle *argp4 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  S1Angle *_swig_go_3;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
    S1Angle *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  argp4 = (S1Angle *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg4 = (S1Angle)*argp4;
  
  
  (arg1)->InitToIntersectionSloppy((S2Polygon const *)arg2,(S2Polygon const *)arg3,arg4);
  
}


void
_wrap_S2Polygon_InitToUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  (arg1)->InitToUnion((S2Polygon const *)arg2,(S2Polygon const *)arg3);
  
}


void
_wrap_S2Polygon_InitToUnionSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S1Angle arg4 ;
  S1Angle *argp4 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  S1Angle *_swig_go_3;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
    S1Angle *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  argp4 = (S1Angle *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg4 = (S1Angle)*argp4;
  
  
  (arg1)->InitToUnionSloppy((S2Polygon const *)arg2,(S2Polygon const *)arg3,arg4);
  
}


void
_wrap_S2Polygon_InitToDifference_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  (arg1)->InitToDifference((S2Polygon const *)arg2,(S2Polygon const *)arg3);
  
}


void
_wrap_S2Polygon_InitToDifferenceSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2Polygon *arg3 = (S2Polygon *) 0 ;
  S1Angle arg4 ;
  S1Angle *argp4 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S2Polygon *_swig_go_2;
  S1Angle *_swig_go_3;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S2Polygon *arg3;
    S1Angle *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2Polygon **)&_swig_go_2; 
  
  argp4 = (S1Angle *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg4 = (S1Angle)*argp4;
  
  
  (arg1)->InitToDifferenceSloppy((S2Polygon const *)arg2,(S2Polygon const *)arg3,arg4);
  
}


void
_wrap_S2Polygon_InitToSimplified_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S1Angle arg3 ;
  S1Angle *argp3 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  S1Angle *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    S1Angle *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  argp3 = (S1Angle *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg3 = (S1Angle)*argp3;
  
  
  (arg1)->InitToSimplified((S2Polygon const *)arg2,arg3);
  
}


void
_wrap_S2Polygon_IntersectWithPolyline_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polyline *arg2 = (S2Polyline *) 0 ;
  vector< S2Polyline * > *arg3 = (vector< S2Polyline * > *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polyline *_swig_go_1;
  vector< S2Polyline * > *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polyline *arg2;
    vector< S2Polyline * > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polyline **)&_swig_go_1; 
  arg3 = *(vector< S2Polyline * > **)&_swig_go_2; 
  
  ((S2Polygon const *)arg1)->IntersectWithPolyline((S2Polyline const *)arg2,arg3);
  
}


void
_wrap_S2Polygon_IntersectWithPolylineSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polyline *arg2 = (S2Polyline *) 0 ;
  vector< S2Polyline * > *arg3 = (vector< S2Polyline * > *) 0 ;
  S1Angle arg4 ;
  S1Angle *argp4 ;
  S2Polygon *_swig_go_0;
  S2Polyline *_swig_go_1;
  vector< S2Polyline * > *_swig_go_2;
  S1Angle *_swig_go_3;
  struct swigargs {
    S2Polygon *arg1;
    S2Polyline *arg2;
    vector< S2Polyline * > *arg3;
    S1Angle *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polyline **)&_swig_go_1; 
  arg3 = *(vector< S2Polyline * > **)&_swig_go_2; 
  
  argp4 = (S1Angle *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg4 = (S1Angle)*argp4;
  
  
  ((S2Polygon const *)arg1)->IntersectWithPolylineSloppy((S2Polyline const *)arg2,arg3,arg4);
  
}


void
_wrap_S2Polygon_SubtractFromPolyline_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polyline *arg2 = (S2Polyline *) 0 ;
  vector< S2Polyline * > *arg3 = (vector< S2Polyline * > *) 0 ;
  S2Polygon *_swig_go_0;
  S2Polyline *_swig_go_1;
  vector< S2Polyline * > *_swig_go_2;
  struct swigargs {
    S2Polygon *arg1;
    S2Polyline *arg2;
    vector< S2Polyline * > *arg3;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polyline **)&_swig_go_1; 
  arg3 = *(vector< S2Polyline * > **)&_swig_go_2; 
  
  ((S2Polygon const *)arg1)->SubtractFromPolyline((S2Polyline const *)arg2,arg3);
  
}


void
_wrap_S2Polygon_SubtractFromPolylineSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polyline *arg2 = (S2Polyline *) 0 ;
  vector< S2Polyline * > *arg3 = (vector< S2Polyline * > *) 0 ;
  S1Angle arg4 ;
  S1Angle *argp4 ;
  S2Polygon *_swig_go_0;
  S2Polyline *_swig_go_1;
  vector< S2Polyline * > *_swig_go_2;
  S1Angle *_swig_go_3;
  struct swigargs {
    S2Polygon *arg1;
    S2Polyline *arg2;
    vector< S2Polyline * > *arg3;
    S1Angle *arg4;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  _swig_go_3 = swig_a->arg4;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polyline **)&_swig_go_1; 
  arg3 = *(vector< S2Polyline * > **)&_swig_go_2; 
  
  argp4 = (S1Angle *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg4 = (S1Angle)*argp4;
  
  
  ((S2Polygon const *)arg1)->SubtractFromPolylineSloppy((S2Polyline const *)arg2,arg3,arg4);
  
}


void
_wrap_S2Polygon_DestructiveUnion_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Polygon * > *arg1 = (vector< S2Polygon * > *) 0 ;
  S2Polygon *result = 0 ;
  vector< S2Polygon * > *_swig_go_0;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Polygon * > *arg1;
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(vector< S2Polygon * > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)S2Polygon::DestructiveUnion(arg1);
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_DestructiveUnionSloppy_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Polygon * > *arg1 = (vector< S2Polygon * > *) 0 ;
  S1Angle arg2 ;
  S1Angle *argp2 ;
  S2Polygon *result = 0 ;
  vector< S2Polygon * > *_swig_go_0;
  S1Angle *_swig_go_1;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Polygon * > *arg1;
    S1Angle *arg2;
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(vector< S2Polygon * > **)&_swig_go_0; 
  
  argp2 = (S1Angle *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null S1Angle");
  }
  arg2 = (S1Angle)*argp2;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)S2Polygon::DestructiveUnionSloppy(arg1,arg2);
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_InitToCellUnionBorder_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2CellUnion *arg2 = 0 ;
  S2Polygon *_swig_go_0;
  S2CellUnion *_swig_go_1;
  struct swigargs {
    S2Polygon *arg1;
    S2CellUnion *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2CellUnion **)&_swig_go_1; 
  
  (arg1)->InitToCellUnionBorder((S2CellUnion const &)*arg2);
  
}


void
_wrap_S2Polygon_IsNormalized_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->IsNormalized();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_BoundaryEquals_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->BoundaryEquals((S2Polygon const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_BoundaryApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  double arg3 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->BoundaryApproxEquals((S2Polygon const *)arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_BoundaryApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->BoundaryApproxEquals((S2Polygon const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_BoundaryNear__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  double arg3 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->BoundaryNear((S2Polygon const *)arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_BoundaryNear__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Polygon *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->BoundaryNear((S2Polygon const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Project_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Point *arg2 = 0 ;
  S2Point result;
  S2Polygon *_swig_go_0;
  S2Point *_swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Point *arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Polygon const *)arg1)->Project((S2Point const &)*arg2);
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Polygon *result = 0 ;
  S2Polygon *_swig_go_0;
  S2Polygon *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    S2Polygon *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Polygon *)((S2Polygon const *)arg1)->Clone();
  *(S2Polygon **)&_swig_go_result = (S2Polygon *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Cap result;
  S2Polygon *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Polygon const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2LatLngRect result;
  S2Polygon *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Polygon const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Contains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Polygon *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Polygon const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2Polygon *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2Polygon *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2Polygon const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2Polygon_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Polygon *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Polygon_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Polygon *arg1 = (S2Polygon *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Polygon *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Polygon *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Polygon **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2LoopIndex_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2LoopIndex *result = 0 ;
  S2Loop *_swig_go_0;
  S2LoopIndex *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    S2LoopIndex *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2LoopIndex *)new S2LoopIndex((S2Loop const *)arg1);
  *(S2LoopIndex **)&_swig_go_result = (S2LoopIndex *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2LoopIndex_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LoopIndex *arg1 = (S2LoopIndex *) 0 ;
  S2LoopIndex *_swig_go_0;
  struct swigargs {
    S2LoopIndex *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LoopIndex **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2LoopIndex_edge_from_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LoopIndex *arg1 = (S2LoopIndex *) 0 ;
  int arg2 ;
  S2Point *result = 0 ;
  S2LoopIndex *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LoopIndex *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LoopIndex **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Point *)((S2LoopIndex const *)arg1)->edge_from(arg2);
  *(S2Point **)&_swig_go_result = (S2Point *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LoopIndex_edge_to_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LoopIndex *arg1 = (S2LoopIndex *) 0 ;
  int arg2 ;
  S2Point *result = 0 ;
  S2LoopIndex *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LoopIndex *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2LoopIndex **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Point *)((S2LoopIndex const *)arg1)->edge_to(arg2);
  *(S2Point **)&_swig_go_result = (S2Point *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2LoopIndex_num_edges_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2LoopIndex *arg1 = (S2LoopIndex *) 0 ;
  int result;
  S2LoopIndex *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2LoopIndex *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2LoopIndex **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2LoopIndex const *)arg1)->num_edges();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Loop__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *result = 0 ;
  S2Loop *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2Loop *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2Loop *)new S2Loop();
  *(S2Loop **)&_swig_go_result = (S2Loop *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Loop__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Point > *arg1 = 0 ;
  S2Loop *result = 0 ;
  vector< S2Point > *_swig_go_0;
  S2Loop *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Point > *arg1;
    long : 0;
    S2Loop *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(vector< S2Point > **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Loop *)new S2Loop((vector< S2Point > const &)*arg1);
  *(S2Loop **)&_swig_go_result = (S2Loop *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Init_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  vector< S2Point > *arg2 = 0 ;
  S2Loop *_swig_go_0;
  vector< S2Point > *_swig_go_1;
  struct swigargs {
    S2Loop *arg1;
    vector< S2Point > *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(vector< S2Point > **)&_swig_go_1; 
  
  (arg1)->Init((vector< S2Point > const &)*arg2);
  
}


void
_wrap_S2Loop_kDefaultMaxAdjacent_S2Loop_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  int result;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2Loop::kDefaultMaxAdjacent;
  
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_IsValid__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->IsValid();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_IsValid__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  vector< S2Point > *arg1 = 0 ;
  int arg2 ;
  bool result;
  vector< S2Point > *_swig_go_0;
  intgo _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    vector< S2Point > *arg1;
    intgo arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(vector< S2Point > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)S2Loop::IsValid((vector< S2Point > const &)*arg1,arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_IsValid__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int arg2 ;
  bool result;
  S2Loop *_swig_go_0;
  intgo _swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    intgo arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->IsValid(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2Loop__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Cell *arg1 = 0 ;
  S2Loop *result = 0 ;
  S2Cell *_swig_go_0;
  S2Loop *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Cell *arg1;
    long : 0;
    S2Loop *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Cell **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Loop *)new S2Loop((S2Cell const &)*arg1);
  *(S2Loop **)&_swig_go_result = (S2Loop *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2Loop_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *_swig_go_0;
  struct swigargs {
    S2Loop *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2Loop_depth_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int result;
  S2Loop *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Loop const *)arg1)->depth();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_set_depth_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int arg2 ;
  S2Loop *_swig_go_0;
  intgo _swig_go_1;
  struct swigargs {
    S2Loop *arg1;
    intgo arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->set_depth(arg2);
  
}


void
_wrap_S2Loop_is_hole_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->is_hole();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_sign_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int result;
  S2Loop *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Loop const *)arg1)->sign();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_num_vertices_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int result;
  S2Loop *_swig_go_0;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Loop const *)arg1)->num_vertices();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_vertex_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  int arg2 ;
  S2Point *result = 0 ;
  S2Loop *_swig_go_0;
  intgo _swig_go_1;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    intgo arg2;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Point *) &((S2Loop const *)arg1)->vertex(arg2);
  *(S2Point **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_IsNormalized_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->IsNormalized();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Normalize_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *_swig_go_0;
  struct swigargs {
    S2Loop *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  (arg1)->Normalize();
  
}


void
_wrap_S2Loop_Invert_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *_swig_go_0;
  struct swigargs {
    S2Loop *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  (arg1)->Invert();
  
}


void
_wrap_S2Loop_GetArea_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  double result;
  S2Loop *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Loop const *)arg1)->GetArea();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_GetCentroid_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Point result;
  S2Loop *_swig_go_0;
  S2Point *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    S2Point *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Loop const *)arg1)->GetCentroid();
  *(S2Point **)&_swig_go_result = new S2Point(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_GetTurningAngle_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  double result;
  S2Loop *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2Loop const *)arg1)->GetTurningAngle();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Contains__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->Contains((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Intersects_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->Intersects((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_ContainsNested_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->ContainsNested((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_ContainsOrCrosses_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  int result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  intgo _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    intgo result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (int)((S2Loop const *)arg1)->ContainsOrCrosses((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_BoundaryEquals_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->BoundaryEquals((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_BoundaryApproxEquals__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  double arg3 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->BoundaryApproxEquals((S2Loop const *)arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_BoundaryApproxEquals__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->BoundaryApproxEquals((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_BoundaryNear__SWIG_0_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  double arg3 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  double _swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    double arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->BoundaryNear((S2Loop const *)arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_BoundaryNear__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Loop *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->BoundaryNear((S2Loop const *)arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Clone_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Loop *result = 0 ;
  S2Loop *_swig_go_0;
  S2Loop *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    S2Loop *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2Loop *)((S2Loop const *)arg1)->Clone();
  *(S2Loop **)&_swig_go_result = (S2Loop *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_GetCapBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Cap result;
  S2Loop *_swig_go_0;
  S2Cap *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    S2Cap *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Loop const *)arg1)->GetCapBound();
  *(S2Cap **)&_swig_go_result = new S2Cap(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_GetRectBound_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2LatLngRect result;
  S2Loop *_swig_go_0;
  S2LatLngRect *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    long : 0;
    S2LatLngRect *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2Loop **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2Loop const *)arg1)->GetRectBound();
  *(S2LatLngRect **)&_swig_go_result = new S2LatLngRect(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Contains__SWIG_1_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->Contains((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_MayIntersect_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Cell *arg2 = 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Cell *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Cell *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Cell **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->MayIntersect((S2Cell const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_VirtualContainsPoint_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->VirtualContainsPoint((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Contains__SWIG_2_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  S2Point *arg2 = 0 ;
  bool result;
  S2Loop *_swig_go_0;
  S2Point *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    S2Point *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2Loop const *)arg1)->Contains((S2Point const &)*arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_Encode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  Encoder *arg2 = (Encoder *) (Encoder *)0 ;
  S2Loop *_swig_go_0;
  Encoder *_swig_go_1;
  struct swigargs {
    S2Loop *arg1;
    Encoder *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(Encoder **)&_swig_go_1; 
  
  ((S2Loop const *)arg1)->Encode(arg2);
  
}


void
_wrap_S2Loop_Decode_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Loop *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->Decode(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2Loop_DecodeWithinScope_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2Loop *arg1 = (S2Loop *) 0 ;
  Decoder *arg2 = (Decoder *) (Decoder *)0 ;
  bool result;
  S2Loop *_swig_go_0;
  Decoder *_swig_go_1;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2Loop *arg1;
    Decoder *arg2;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2Loop **)&_swig_go_0; 
  arg2 = *(Decoder **)&_swig_go_1; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->DecodeWithinScope(arg2);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_new_S2PolygonBuilderOptions_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *result = 0 ;
  S2PolygonBuilderOptions *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2PolygonBuilderOptions *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = (S2PolygonBuilderOptions *)new S2PolygonBuilderOptions();
  *(S2PolygonBuilderOptions **)&_swig_go_result = (S2PolygonBuilderOptions *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_DIRECTED_XOR_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions result;
  S2PolygonBuilderOptions *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2PolygonBuilderOptions *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2PolygonBuilderOptions::DIRECTED_XOR();
  *(S2PolygonBuilderOptions **)&_swig_go_result = new S2PolygonBuilderOptions(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_UNDIRECTED_XOR_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions result;
  S2PolygonBuilderOptions *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2PolygonBuilderOptions *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2PolygonBuilderOptions::UNDIRECTED_XOR();
  *(S2PolygonBuilderOptions **)&_swig_go_result = new S2PolygonBuilderOptions(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_UNDIRECTED_UNION_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions result;
  S2PolygonBuilderOptions *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    long : 0;
    S2PolygonBuilderOptions *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  
  swig_stktop = _swig_topofstack();
  result = S2PolygonBuilderOptions::UNDIRECTED_UNION();
  *(S2PolygonBuilderOptions **)&_swig_go_result = new S2PolygonBuilderOptions(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_undirected_edges_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool result;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2PolygonBuilderOptions const *)arg1)->undirected_edges();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_set_undirected_edges_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool arg2 ;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_1;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    bool arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_undirected_edges(arg2);
  
}


void
_wrap_S2PolygonBuilderOptions_xor_edges_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool result;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2PolygonBuilderOptions const *)arg1)->xor_edges();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_set_xor_edges_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool arg2 ;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_1;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    bool arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_xor_edges(arg2);
  
}


void
_wrap_S2PolygonBuilderOptions_validate_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool result;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)((S2PolygonBuilderOptions const *)arg1)->validate();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_set_validate_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  bool arg2 ;
  S2PolygonBuilderOptions *_swig_go_0;
  bool _swig_go_1;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    bool arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_validate(arg2);
  
}


void
_wrap_S2PolygonBuilderOptions_vertex_merge_radius_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  S1Angle result;
  S2PolygonBuilderOptions *_swig_go_0;
  S1Angle *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    S1Angle *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = ((S2PolygonBuilderOptions const *)arg1)->vertex_merge_radius();
  *(S1Angle **)&_swig_go_result = new S1Angle(result); 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_set_vertex_merge_radius_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  S1Angle *arg2 = 0 ;
  S2PolygonBuilderOptions *_swig_go_0;
  S1Angle *_swig_go_1;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    S1Angle *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  arg2 = *(S1Angle **)&_swig_go_1; 
  
  (arg1)->set_vertex_merge_radius((S1Angle const &)*arg2);
  
}


void
_wrap_S2PolygonBuilderOptions_edge_splice_fraction_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  double result;
  S2PolygonBuilderOptions *_swig_go_0;
  double _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    double result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (double)((S2PolygonBuilderOptions const *)arg1)->edge_splice_fraction();
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilderOptions_set_edge_splice_fraction_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  double arg2 ;
  S2PolygonBuilderOptions *_swig_go_0;
  double _swig_go_1;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    double arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->set_edge_splice_fraction(arg2);
  
}


void
_wrap_delete_S2PolygonBuilderOptions_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = (S2PolygonBuilderOptions *) 0 ;
  S2PolygonBuilderOptions *_swig_go_0;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_new_S2PolygonBuilder_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilderOptions *arg1 = 0 ;
  S2PolygonBuilder *result = 0 ;
  S2PolygonBuilderOptions *_swig_go_0;
  S2PolygonBuilder *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilderOptions *arg1;
    long : 0;
    S2PolygonBuilder *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilderOptions **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2PolygonBuilder *)new S2PolygonBuilder((S2PolygonBuilderOptions const &)*arg1);
  *(S2PolygonBuilder **)&_swig_go_result = (S2PolygonBuilder *)result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_delete_S2PolygonBuilder_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2PolygonBuilder *_swig_go_0;
  struct swigargs {
    S2PolygonBuilder *arg1;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  
  delete arg1;
  
}


void
_wrap_S2PolygonBuilder_options_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2PolygonBuilderOptions *result = 0 ;
  S2PolygonBuilder *_swig_go_0;
  S2PolygonBuilderOptions *_swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilder *arg1;
    long : 0;
    S2PolygonBuilderOptions *result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  
  swig_stktop = _swig_topofstack();
  result = (S2PolygonBuilderOptions *) &((S2PolygonBuilder const *)arg1)->options();
  *(S2PolygonBuilderOptions **)&_swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilder_AddEdge_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2Point *arg2 = 0 ;
  S2Point *arg3 = 0 ;
  bool result;
  S2PolygonBuilder *_swig_go_0;
  S2Point *_swig_go_1;
  S2Point *_swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilder *arg1;
    S2Point *arg2;
    S2Point *arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(S2Point **)&_swig_go_1; 
  arg3 = *(S2Point **)&_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->AddEdge((S2Point const &)*arg2,(S2Point const &)*arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilder_AddLoop_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2Loop *arg2 = (S2Loop *) 0 ;
  S2PolygonBuilder *_swig_go_0;
  S2Loop *_swig_go_1;
  struct swigargs {
    S2PolygonBuilder *arg1;
    S2Loop *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(S2Loop **)&_swig_go_1; 
  
  (arg1)->AddLoop((S2Loop const *)arg2);
  
}


void
_wrap_S2PolygonBuilder_AddPolygon_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2PolygonBuilder *_swig_go_0;
  S2Polygon *_swig_go_1;
  struct swigargs {
    S2PolygonBuilder *arg1;
    S2Polygon *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  
  (arg1)->AddPolygon((S2Polygon const *)arg2);
  
}


void
_wrap_S2PolygonBuilder_AssembleLoops_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  vector< S2Loop * > *arg2 = (vector< S2Loop * > *) 0 ;
  S2PolygonBuilder::EdgeList *arg3 = (S2PolygonBuilder::EdgeList *) 0 ;
  bool result;
  S2PolygonBuilder *_swig_go_0;
  vector< S2Loop * > *_swig_go_1;
  vector< pair< S2Point,S2Point > > *_swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilder *arg1;
    vector< S2Loop * > *arg2;
    vector< pair< S2Point,S2Point > > *arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(vector< S2Loop * > **)&_swig_go_1; 
  arg3 = *(S2PolygonBuilder::EdgeList **)&_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->AssembleLoops(arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilder_AssemblePolygon_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  S2Polygon *arg2 = (S2Polygon *) 0 ;
  S2PolygonBuilder::EdgeList *arg3 = (S2PolygonBuilder::EdgeList *) 0 ;
  bool result;
  S2PolygonBuilder *_swig_go_0;
  S2Polygon *_swig_go_1;
  vector< pair< S2Point,S2Point > > *_swig_go_2;
  bool _swig_go_result;
  char *swig_stktop;
  struct swigargs {
    S2PolygonBuilder *arg1;
    S2Polygon *arg2;
    vector< pair< S2Point,S2Point > > *arg3;
    long : 0;
    bool result;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  _swig_go_2 = swig_a->arg3;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(S2Polygon **)&_swig_go_1; 
  arg3 = *(S2PolygonBuilder::EdgeList **)&_swig_go_2; 
  
  swig_stktop = _swig_topofstack();
  result = (bool)(arg1)->AssemblePolygon(arg2,arg3);
  _swig_go_result = result; 
  swig_a = (struct swigargs*)((char*)swig_a + (_swig_topofstack() - swig_stktop));
  swig_a->result = _swig_go_result;
}


void
_wrap_S2PolygonBuilder_set_debug_matrix_s2_f6b9d4d9d8adaba8(void *swig_v)
{
  S2PolygonBuilder *arg1 = (S2PolygonBuilder *) 0 ;
  Matrix3x3_d *arg2 = 0 ;
  S2PolygonBuilder *_swig_go_0;
  Matrix3x3_d *_swig_go_1;
  struct swigargs {
    S2PolygonBuilder *arg1;
    Matrix3x3_d *arg2;
  } *swig_a = (struct swigargs *) swig_v;
  
  _swig_go_0 = swig_a->arg1;
  _swig_go_1 = swig_a->arg2;
  arg1 = *(S2PolygonBuilder **)&_swig_go_0; 
  arg2 = *(Matrix3x3_d **)&_swig_go_1; 
  
  (arg1)->set_debug_matrix((Matrix3x3_d const &)*arg2);
  
}


#ifdef __cplusplus
}
#endif

