/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: s2.i

package s2

// #cgo LDFLAGS:  -L/home/tudorh/usr/lib -lgflags -L/usr/lib -lz -L/usr/local/opt/openssl/lib
// #cgo CFLAGS:   -fPIC -O -DNDEBUG -I. -DARCH_K8 -I/home/tudorh/usr/include -I/usr/include -I/usr/local/opt/openssl/include -Wno-deprecated -DS2_USE_EXACTFLOAT
// #cgo CXXFLAGS: -I/usr/local/opt/openssl/include -I/Users/rm/src/github.com/YikYakApp/s2/src/geometry

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
extern void _wrap_Swig_free_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern uintptr_t _wrap_new_StringVector__SWIG_0_s2_78f4f9645f0d9c42(void);
extern uintptr_t _wrap_new_StringVector__SWIG_1_s2_78f4f9645f0d9c42(swig_type_1 arg1);
extern swig_type_2 _wrap_StringVector_size_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern swig_type_3 _wrap_StringVector_capacity_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_StringVector_reserve_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_StringVector_isEmpty_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_StringVector_clear_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_StringVector_add_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_StringVector_get_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_StringVector_set_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_intgo arg2, swig_type_7 arg3);
extern void _wrap_delete_StringVector_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_0_s2_78f4f9645f0d9c42(void);
extern uintptr_t _wrap_new_ByteVector__SWIG_1_s2_78f4f9645f0d9c42(swig_type_8 arg1);
extern swig_type_9 _wrap_ByteVector_size_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern swig_type_10 _wrap_ByteVector_capacity_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_ByteVector_reserve_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_type_11 arg2);
extern _Bool _wrap_ByteVector_isEmpty_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_ByteVector_clear_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_ByteVector_add_s2_78f4f9645f0d9c42(uintptr_t arg1, char arg2);
extern char _wrap_ByteVector_get_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ByteVector_set_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_ByteVector_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern uintptr_t _wrap_new_R1Interval__SWIG_0_s2_78f4f9645f0d9c42(double arg1, double arg2);
extern uintptr_t _wrap_new_R1Interval__SWIG_1_s2_78f4f9645f0d9c42(void);
extern uintptr_t _wrap_R1Interval_Empty_s2_78f4f9645f0d9c42(void);
extern uintptr_t _wrap_R1Interval_FromPoint_s2_78f4f9645f0d9c42(double arg1);
extern uintptr_t _wrap_R1Interval_FromPointPair_s2_78f4f9645f0d9c42(double arg1, double arg2);
extern double _wrap_R1Interval_lo_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern double _wrap_R1Interval_hi_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern double _wrap_R1Interval_bound_s2_78f4f9645f0d9c42(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_R1Interval_bounds_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern void _wrap_R1Interval_set_lo_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern void _wrap_R1Interval_set_hi_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern _Bool _wrap_R1Interval_is_empty_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern double _wrap_R1Interval_GetCenter_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern double _wrap_R1Interval_GetLength_s2_78f4f9645f0d9c42(uintptr_t arg1);
extern _Bool _wrap_R1Interval_Contains__SWIG_0_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern _Bool _wrap_R1Interval_InteriorContains__SWIG_0_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern _Bool _wrap_R1Interval_Contains__SWIG_1_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_R1Interval_InteriorContains__SWIG_1_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_R1Interval_Intersects_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_R1Interval_InteriorIntersects_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_R1Interval_GetDirectedHausdorffDistance_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_R1Interval_AddPoint_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_R1Interval_Expanded_s2_78f4f9645f0d9c42(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_R1Interval_Union_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_R1Interval_Intersection_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_R1Interval_ApproxEquals__SWIG_0_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2, double arg3);
extern _Bool _wrap_R1Interval_ApproxEquals__SWIG_1_s2_78f4f9645f0d9c42(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_R1Interval_s2_78f4f9645f0d9c42(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

func NewStringVector__SWIG_0() (_swig_ret StringVector) {
	var swig_r StringVector
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_0_s2_78f4f9645f0d9c42()))
	return swig_r
}

func NewStringVector__SWIG_1(arg1 int64) (_swig_ret StringVector) {
	var swig_r StringVector
	_swig_i_0 := arg1
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_1_s2_78f4f9645f0d9c42(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		return NewStringVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStringVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_size_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_capacity_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_reserve_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrStringVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_StringVector_isEmpty_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_StringVector_clear_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_add_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStringVector) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StringVector_get_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_StringVector_set_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteStringVector(arg1 StringVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StringVector_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func NewByteVector__SWIG_0() (_swig_ret ByteVector) {
	var swig_r ByteVector
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_0_s2_78f4f9645f0d9c42()))
	return swig_r
}

func NewByteVector__SWIG_1(arg1 int64) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_1_s2_78f4f9645f0d9c42(C.swig_type_8(_swig_i_0))))
	return swig_r
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		return NewByteVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrByteVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_size_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_capacity_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_reserve_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_type_11(_swig_i_1))
}

func (arg1 SwigcptrByteVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ByteVector_isEmpty_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_ByteVector_clear_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_add_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrByteVector) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_ByteVector_get_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ByteVector_set_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteByteVector(arg1 ByteVector) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ByteVector_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrR1Interval uintptr

func (p SwigcptrR1Interval) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrR1Interval) SwigIsR1Interval() {
}

func NewR1Interval__SWIG_0(arg1 float64, arg2 float64) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_new_R1Interval__SWIG_0_s2_78f4f9645f0d9c42(C.double(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func NewR1Interval__SWIG_1() (_swig_ret R1Interval) {
	var swig_r R1Interval
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_new_R1Interval__SWIG_1_s2_78f4f9645f0d9c42()))
	return swig_r
}

func NewR1Interval(a ...interface{}) R1Interval {
	argc := len(a)
	if argc == 0 {
		return NewR1Interval__SWIG_1()
	}
	if argc == 2 {
		return NewR1Interval__SWIG_0(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func R1IntervalEmpty() (_swig_ret R1Interval) {
	var swig_r R1Interval
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_Empty_s2_78f4f9645f0d9c42()))
	return swig_r
}

func R1IntervalFromPoint(arg1 float64) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_FromPoint_s2_78f4f9645f0d9c42(C.double(_swig_i_0))))
	return swig_r
}

func R1IntervalFromPointPair(arg1 float64, arg2 float64) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_FromPointPair_s2_78f4f9645f0d9c42(C.double(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Lo() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_R1Interval_lo_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Hi() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_R1Interval_hi_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Bound(arg2 int) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_R1Interval_bound_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Bounds() (_swig_ret Vector2_d) {
	var swig_r Vector2_d
	_swig_i_0 := arg1
	swig_r = (Vector2_d)(SwigcptrVector2_d(C._wrap_R1Interval_bounds_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Set_lo(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_R1Interval_set_lo_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrR1Interval) Set_hi(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_R1Interval_set_hi_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrR1Interval) Is_empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_R1Interval_is_empty_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) GetCenter() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_R1Interval_GetCenter_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) GetLength() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_R1Interval_GetLength_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Contains__SWIG_0(arg2 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_R1Interval_Contains__SWIG_0_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) InteriorContains__SWIG_0(arg2 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_R1Interval_InteriorContains__SWIG_0_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Contains__SWIG_1(arg2 R1Interval) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_R1Interval_Contains__SWIG_1_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrR1Interval) Contains(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(R1Interval); !ok {
			goto check_1
		}
		return p.Contains__SWIG_1(a[0].(R1Interval))
	}
check_1:
	if argc == 1 {
		return p.Contains__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrR1Interval) InteriorContains__SWIG_1(arg2 R1Interval) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_R1Interval_InteriorContains__SWIG_1_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrR1Interval) InteriorContains(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(R1Interval); !ok {
			goto check_1
		}
		return p.InteriorContains__SWIG_1(a[0].(R1Interval))
	}
check_1:
	if argc == 1 {
		return p.InteriorContains__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrR1Interval) Intersects(arg2 R1Interval) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_R1Interval_Intersects_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) InteriorIntersects(arg2 R1Interval) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_R1Interval_InteriorIntersects_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) GetDirectedHausdorffDistance(arg2 R1Interval) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_R1Interval_GetDirectedHausdorffDistance_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) AddPoint(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_R1Interval_AddPoint_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrR1Interval) Expanded(arg2 float64) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_Expanded_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Union(arg2 R1Interval) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_Union_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrR1Interval) Intersection(arg2 R1Interval) (_swig_ret R1Interval) {
	var swig_r R1Interval
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (R1Interval)(SwigcptrR1Interval(C._wrap_R1Interval_Intersection_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrR1Interval) ApproxEquals__SWIG_0(arg2 R1Interval, arg3 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_R1Interval_ApproxEquals__SWIG_0_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrR1Interval) ApproxEquals__SWIG_1(arg2 R1Interval) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_R1Interval_ApproxEquals__SWIG_1_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrR1Interval) ApproxEquals(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.ApproxEquals__SWIG_1(a[0].(R1Interval))
	}
	if argc == 2 {
		return p.ApproxEquals__SWIG_0(a[0].(R1Interval), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func DeleteR1Interval(arg1 R1Interval) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_R1Interval_s2_78f4f9645f0d9c42(C.uintptr_t(_swig_i_0))
}

type R1Interval interface {
	Swigcptr() uintptr
	SwigIsR1Interval()
	Lo() (_swig_ret float64)
	Hi() (_swig_ret float64)
	Bound(arg2 int) (_swig_ret float64)
	Bounds() (_swig_ret Vector2_d)
	Set_lo(arg2 float64)
	Set_hi(arg2 float64)
	Is_empty() (_swig_ret bool)
	GetCenter() (_swig_ret float64)
	GetLength() (_swig_ret float64)
	Contains(a ...interface{}) bool
	InteriorContains(a ...interface{}) bool
	Intersects(arg2 R1Interval) (_swig_ret bool)
	InteriorIntersects(arg2 R1Interval) (_swig_ret bool)
	GetDirectedHausdorffDistance(arg2 R1Interval) (_swig_ret float64)
	AddPoint(arg2 float64)
	Expanded(arg2 float64) (_swig_ret R1Interval)
	Union(arg2 R1Interval) (_swig_ret R1Interval)
	Intersection(arg2 R1Interval) (_swig_ret R1Interval)
	ApproxEquals(a ...interface{}) bool
}

type SwigcptrVector2_d uintptr
type Vector2_d interface {
	Swigcptr() uintptr
}

func (p SwigcptrVector2_d) Swigcptr() uintptr {
	return uintptr(p)
}
